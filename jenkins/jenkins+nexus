pipeline {
    agent {
        label "master"
    }
    tools { 
        maven 'Maven' 
        jdk 'Java 8' 
    }
    environment {
        // This can be nexus3 or nexus2
        NEXUS_VERSION = "nexus3"
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running
        NEXUS_URL = "127.0.0.1:8081"
        // Repository where we will upload the artifact
        NEXUS_REPOSITORY = "home_project"
        // Jenkins credential id to authenticate to Nexus OSS
        NEXUS_CREDENTIAL_ID = "nexus"
    }
    stages {
        stage('Retrieving prj. data') {
      steps{
            script {
                git([url: 'https://github.com/ita-social-projects/Home', branch: 'dev'])
            }
        }
        }  
        stage ('Checking pathes') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                ''' 
            }
        }

        stage ('Building the project') {
            steps {
               sh 'sudo mvn clean package -DskipTests=true'
            }
        }
        stage ('Creating the database') {
            options {
                timeout(time: 10, unit: "SECONDS")
            }
            steps {
                script {
                try {
                        dir("home-dev/init") {
                    sh 'sudo docker-compose up'
                        }
                        sleep(time: 15, unit: "SECONDS")
                    } catch (Throwable e) {
                        echo "Caught ${e.toString()}"
                        currentBuild.result = "SUCCESS" 
                    }
                }
                }
            }
            stage("Publish to Nexus Repository Manager") {
                steps {
                    script {
                    pom = readMavenPom file: "pom.xml";
                    //filesByGlob = findFiles(glob: "*target/.${pom.packaging}");
                    filesByGlob = findFiles(glob: "pom.xml");
                    echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                    artifactPath = filesByGlob[0].path;
                    artifactExists = fileExists artifactPath;
                    if(artifactExists) {
                        echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
                        nexusArtifactUploader(
                            nexusVersion: NEXUS_VERSION,
                            protocol: NEXUS_PROTOCOL,
                            nexusUrl: NEXUS_URL,
                            groupId: pom.groupId,
                            version: pom.version,
                            repository: NEXUS_REPOSITORY,
                            credentialsId: NEXUS_CREDENTIAL_ID,
                            artifacts: [
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: artifactPath,
                                type: pom.packaging],
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: "pom.xml",
                                type: "pom"]
                            ]
                        );
                    } else {
                        error "*** File: ${artifactPath}, could not be found";
                    }
                }
                }
            }
        }
    }
